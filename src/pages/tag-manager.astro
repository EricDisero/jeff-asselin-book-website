---
import Layout from '../layouts/Layout.astro';
import Header from '../components/Header.astro';
import { tagCollections, tagHelpers, uiFilterSections } from '../data/tag-system.js';
---

<Layout title="Tag Manager - The Rudimental Blueprint">
  <Header />
  
  <section class="tag-manager">
    <div class="container">
      <div class="header-section">
        <h1>üè∑Ô∏è Centralized Tag Manager</h1>
        <p class="subtitle">Single source of truth for ALL tags and UI filters</p>
        <div class="stats">
          <div class="stat">
            <span class="stat-number">{Object.keys(tagCollections).length}</span>
            <span class="stat-label">Tag Collections</span>
          </div>
          <div class="stat">
            <span class="stat-number">{tagHelpers.getAllTagValues().length}</span>
            <span class="stat-label">Total Tags</span>
          </div>
          <div class="stat">
            <span class="stat-number">{uiFilterSections.length}</span>
            <span class="stat-label">UI Filter Sections</span>
          </div>
        </div>
      </div>

      <!-- UI Filter Preview -->
      <div class="filter-preview">
        <h2>üéõÔ∏è Live UI Filter Preview</h2>
        <p>These are the filters that appear on the Videos page, dynamically generated from the centralized system:</p>
        
        {uiFilterSections.map((section: any) => (
          <div class="filter-section">
            <h3>{section.title}</h3>
            <div class="filter-tags">
                             {Object.values((tagCollections as any)[section.tagCollection]).map((tag: any) => (
                <span class="preview-tag" data-collection={section.tagCollection} data-tag-id={tag.id}>
                  {tag.uiLabel}
                </span>
              ))}
            </div>
          </div>
        ))}
      </div>

      <!-- Tag Collections Management -->
      <div class="collections-section">
        <h2>üìö Tag Collections</h2>
        <p>Edit tags in <code>src/data/tag-system.js</code> - changes automatically update the UI</p>
        
        {Object.entries(tagCollections).map(([collectionName, collection]: [string, any]) => (
          <div class="collection-card">
            <div class="collection-header">
              <h3>{collectionName}</h3>
              <span class="tag-count">{Object.keys(collection).length} tags</span>
            </div>
            
            <div class="collection-tags">
              {Object.entries(collection).map(([tagId, tag]: [string, any]) => (
                <div class="tag-item">
                  <div class="tag-main">
                    <strong class="tag-id">{tag.id}</strong>
                    <span class="tag-label">{tag.uiLabel}</span>
                    {tag.tagValue && <code class="tag-value">{tag.tagValue}</code>}
                  </div>
                  {tag.description && (
                    <div class="tag-description">{tag.description}</div>
                  )}
                  {tag.rudiments && (
                    <div class="tag-rudiments">
                      <strong>Rudiments:</strong> {tag.rudiments.slice(0, 3).join(', ')}
                      {tag.rudiments.length > 3 && <span>... +{tag.rudiments.length - 3} more</span>}
                    </div>
                  )}
                  {tag.timeSignatures && (
                    <div class="tag-time-signatures">
                      <strong>Time Signatures:</strong> {tag.timeSignatures.join(', ')}
                    </div>
                  )}
                  {tag.bpmRange && (
                    <div class="tag-bpm-range">
                      <strong>BPM Range:</strong> {tag.bpmRange[0]} - {tag.bpmRange[1] || '‚àû'}
                    </div>
                  )}
                </div>
              ))}
            </div>
          </div>
        ))}
      </div>

      <!-- Helper Functions -->
      <div class="helpers-section">
        <h2>üõ†Ô∏è Tag Helper Functions</h2>
        <p>Available helper functions for tag management and auto-generation:</p>
        
        <div class="helper-grid">
          <div class="helper-item">
            <h4>getTagCollection(collectionName)</h4>
            <p>Get all tags for a specific collection</p>
          </div>
          <div class="helper-item">
            <h4>getUILabels(collectionName)</h4>
            <p>Get UI labels for generating filter buttons</p>
          </div>
          <div class="helper-item">
            <h4>getAllTagValues()</h4>
            <p>Get all possible tag values for validation</p>
          </div>
          <div class="helper-item">
            <h4>findTagByValue(tagValue)</h4>
            <p>Find tag information by its value</p>
          </div>
          <div class="helper-item">
            <h4>getTempoRangeTag(bpm)</h4>
            <p>Auto-generate tempo range tag from BPM</p>
          </div>
          <div class="helper-item">
            <h4>getMeterTag(meter)</h4>
            <p>Auto-generate meter tag from meter field</p>
          </div>
        </div>
      </div>

      <!-- System Status -->
      <div class="status-section">
        <h2>‚ö° System Status</h2>
        <div class="status-grid">
          <div class="status-item status-success">
            <h4>‚úÖ Centralized System Active</h4>
            <p>All tags managed from <code>tag-system.js</code></p>
          </div>
          <div class="status-item status-success">
            <h4>‚úÖ UI Dynamically Generated</h4>
            <p>Filter buttons auto-generated from centralized tags</p>
          </div>
          <div class="status-item status-success">
            <h4>‚úÖ No Hardcoded Tags</h4>
            <p>All UI filters pull from single source of truth</p>
          </div>
        </div>
      </div>
    </div>
  </section>
</Layout>

<style>
  .tag-manager {
    padding: 2rem 0;
    background: linear-gradient(135deg, #1a1a1a 0%, #2d2d2d 100%);
    min-height: 100vh;
    color: white;
  }

  .container {
    max-width: 1200px;
    margin: 0 auto;
    padding: 0 2rem;
  }

  .header-section {
    text-align: center;
    margin-bottom: 3rem;
  }

  .header-section h1 {
    font-size: 2.5rem;
    margin-bottom: 1rem;
    background: linear-gradient(135deg, #4CAF50, #45a049);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-clip: text;
  }

  .subtitle {
    font-size: 1.2rem;
    color: #ccc;
    margin-bottom: 2rem;
  }

  .stats {
    display: flex;
    justify-content: center;
    gap: 2rem;
    margin-top: 2rem;
  }

  .stat {
    display: flex;
    flex-direction: column;
    align-items: center;
    background: rgba(255, 255, 255, 0.1);
    padding: 1.5rem;
    border-radius: 12px;
    backdrop-filter: blur(10px);
  }

  .stat-number {
    font-size: 2rem;
    font-weight: bold;
    color: #4CAF50;
  }

  .stat-label {
    font-size: 0.9rem;
    color: #ccc;
    margin-top: 0.5rem;
  }

  .filter-preview, .collections-section, .helpers-section, .status-section {
    background: rgba(255, 255, 255, 0.05);
    padding: 2rem;
    border-radius: 16px;
    margin-bottom: 2rem;
    backdrop-filter: blur(10px);
    border: 1px solid rgba(255, 255, 255, 0.1);
  }

  .filter-preview h2, .collections-section h2, .helpers-section h2, .status-section h2 {
    color: #4CAF50;
    margin-bottom: 1rem;
    font-size: 1.5rem;
  }

  .filter-section {
    margin-bottom: 1.5rem;
  }

  .filter-section h3 {
    color: #ddd;
    margin-bottom: 0.5rem;
    font-size: 1rem;
    text-transform: uppercase;
    letter-spacing: 1px;
  }

  .filter-tags {
    display: flex;
    flex-wrap: wrap;
    gap: 0.5rem;
  }

  .preview-tag {
    background: #4CAF50;
    color: white;
    padding: 0.5rem 1rem;
    border-radius: 20px;
    font-size: 0.8rem;
    cursor: pointer;
    transition: all 0.2s ease;
  }

  .preview-tag:hover {
    background: #45a049;
    transform: translateY(-2px);
  }

  .collection-card {
    background: rgba(255, 255, 255, 0.05);
    border-radius: 12px;
    padding: 1.5rem;
    margin-bottom: 1.5rem;
    border: 1px solid rgba(255, 255, 255, 0.1);
  }

  .collection-header {
    display: flex;
    justify-content: between;
    align-items: center;
    margin-bottom: 1rem;
    padding-bottom: 0.5rem;
    border-bottom: 1px solid rgba(255, 255, 255, 0.1);
  }

  .collection-header h3 {
    color: #4CAF50;
    margin: 0;
    text-transform: capitalize;
  }

  .tag-count {
    background: rgba(76, 175, 80, 0.2);
    color: #4CAF50;
    padding: 0.3rem 0.8rem;
    border-radius: 12px;
    font-size: 0.8rem;
  }

  .collection-tags {
    display: grid;
    gap: 1rem;
  }

  .tag-item {
    background: rgba(255, 255, 255, 0.03);
    padding: 1rem;
    border-radius: 8px;
    border-left: 3px solid #4CAF50;
  }

  .tag-main {
    display: flex;
    align-items: center;
    gap: 1rem;
    margin-bottom: 0.5rem;
  }

  .tag-id {
    color: #4CAF50;
    font-family: 'Monaco', monospace;
    font-size: 0.9rem;
  }

  .tag-label {
    color: #fff;
    font-weight: 500;
  }

  .tag-value {
    background: rgba(255, 255, 255, 0.1);
    padding: 0.2rem 0.5rem;
    border-radius: 4px;
    font-size: 0.8rem;
    color: #ccc;
  }

  .tag-description, .tag-rudiments, .tag-time-signatures, .tag-bpm-range {
    font-size: 0.85rem;
    color: #aaa;
    margin-top: 0.3rem;
  }

  .helper-grid, .status-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
    gap: 1rem;
  }

  .helper-item, .status-item {
    background: rgba(255, 255, 255, 0.05);
    padding: 1.5rem;
    border-radius: 8px;
    border: 1px solid rgba(255, 255, 255, 0.1);
  }

  .helper-item h4, .status-item h4 {
    color: #4CAF50;
    margin-bottom: 0.5rem;
    font-family: 'Monaco', monospace;
    font-size: 0.9rem;
  }

  .helper-item p, .status-item p {
    color: #ccc;
    font-size: 0.9rem;
    margin: 0;
  }

  .status-success {
    border-left: 3px solid #4CAF50;
  }

  code {
    background: rgba(255, 255, 255, 0.1);
    padding: 0.2rem 0.4rem;
    border-radius: 4px;
    font-family: 'Monaco', monospace;
    font-size: 0.85rem;
    color: #4CAF50;
  }

  @media (max-width: 768px) {
    .stats {
      flex-direction: column;
      gap: 1rem;
    }
    
    .tag-main {
      flex-direction: column;
      align-items: flex-start;
      gap: 0.5rem;
    }
  }
</style> 